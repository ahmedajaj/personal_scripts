version: 2.1

jobs:
  javascript:
    docker:
      - image: node:16
    steps:
      - checkout
      - run:
          name: "Build and test"
          command: |
            set +o pipefail
            npm install
            npm run test | tee ./console.log
            LAUNCH_ID=$(sed -nE 's/.*ReportPortal Launch Link: .*\/([0-9]+).*/\1/p' console.log)
            echo $LAUNCH_ID
      - run:
          name: "Quality gates"
          environment:
            RP_INSTANCE_URL: https://reportportal.epam.com
            RP_PROJECT: AHMED_AZHAZH_PERSONAL
            REQUEST_TIMEOUT_SECONDS: "60"
            SCRIPT_TIMEOUT_SECONDS: "60"
          command: |
            apt install jq -y
            QUALITY_GATE_STATUS=""
            START_TIME=$(date +%s)
            # Loop until quality gate status is obtained or timeout is reached
            while [[ -z "$QUALITY_GATE_STATUS" && $(( $(date +%s) - START_TIME )) -lt $SCRIPT_TIMEOUT_SECONDS ]]; do
              printf "Launch ID $RP_LAUNCH_ID. Waiting for quality gate status....\n"
              sleep 10
              
              # Retrieve quality gate status using curl and jq
              QUALITY_GATE_STATUS=$(curl -s --retry 3 --max-time "$REQUEST_TIMEOUT_SECONDS" -H "Authorization: Bearer $RP_API_KEY" "$RP_INSTANCE_URL/api/v1/$RP_PROJECT/launch/$RP_LAUNCH_ID" | jq -r '.metadata.qualityGate.status // empty')
            done
        
            # Check quality gate status and take appropriate action
            if [[ "$QUALITY_GATE_STATUS" != "PASSED" ]]; then
              printf "Quality gate status: %s\nFailing the pipeline.\n" "$QUALITY_GATE_STATUS"
              exit 1
            else
              printf "Quality gate status: %s\nPipeline passed.\n" "$QUALITY_GATE_STATUS"
            fi
            
workflows:
  javascript-workflow:
    jobs:
      - javascript
