format_version: "13"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other
workflows:
  android:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - file-downloader@1:
        inputs:
        - destination: $HOME/keystores/android.jks
        - source: $BITRISEIO_ANDROID_KEYSTORE_URL
    - avd-manager@1: {}
    - git-clone@8: {}
    - android-build-for-ui-testing@0:
        inputs:
        - variant: AndroidTest
        - module: junit5
    - sign-apk@1:
        inputs:
        - use_apk_signer: "true"
    - script@1:
        title: Run Junit tests
        inputs:
        - content: |-
            adb devices
            #ls -la /bitrise/keystore/android.jks
            #whoami
            #chmod 700 /bitrise/keystore
            #chmod 600 /bitrise/keystore/android.jks

            #ls -la /bitrise/keystore/android.jks

            ./gradlew junit5:connectedAndroidTest --stacktrace
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -o pipefail

            QUALITY_GATE_STATUS=""
            START_TIME=$(date +%s)
            echo $START_TIME

            QUALITY_GATE_JSON=$(curl -s -H "Authorization: Bearer $RP_API_KEY" --max-time "$REQUEST_TIMEOUT_SECONDS" "$RP_INSTANCE_URL/api/v1/$RP_PROJECT/launch/$RP_LAUNCH_ID")
            QUALITY_GATE_STATUS=$(echo "$QUALITY_GATE_JSON" | jq -r '.metadata.qualityGate.status // empty')


            if [ "$QUALITY_GATE_STATUS" != "PASSED" ]; then
              echo "Quality gate status: $QUALITY_GATE_STATUS"
              echo "Failing the pipeline."
              exit 1
            else
              echo "Quality gate status: $QUALITY_GATE_STATUS"
              echo "Pipeline passed."
            fi
        title: Quality gate
    - script@1:
        title: Keystore
        inputs:
        - content: |-
            mkdir /bitrise/keystore
            cd /bitrise/keystore

            keytool -genkey -v -keystore android.jks -storepass qwerty12345 -alias android -keypass qwerty12345 -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=AhmedAzhazh, OU=EPAM, O=EPAM, L=Kyiv, ST=KV, C=UA"


            ls -la /bitrise/keystore
    - deploy-to-bitrise-io@2: {}
  javascript:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - script@1:
        title: Run Junit tests
        inputs:
        - content: |-
            npm install
            npm run test | tee ./console.log

            sed -nE 's/.*ReportPortal Launch Link: .*\/([0-9]+).*/export RP_LAUNCH_ID=\1/p' console.log > launch.env

            cat launch.env
    - script@1:
        inputs:
        - content: "#!/usr/bin/env bash\n\n# Fail the pipeline in case of errors\nset -o pipefail\n\n# Get $RP_LAUNCH_ID from launch.env\nsource launch.env\n\nQUALITY_GATE_STATUS=\"\"\nSTART_TIME=$(date +%s)\n\n# Loop until quality gate status is obtained or timeout is reached\nwhile [[ -z \"$QUALITY_GATE_STATUS\" && $(( $(date +%s) - START_TIME )) -lt $SCRIPT_TIMEOUT_SECONDS ]]; do\n  printf \"Waiting for quality gate status...\\n\"\n  sleep 10\n  \n  # Retrieve quality gate status using curl and jq\n  QUALITY_GATE_STATUS=$(curl -s --retry 3 --max-time \"$REQUEST_TIMEOUT_SECONDS\" -H \"Authorization: Bearer $RP_API_KEY\" \"$RP_INSTANCE_URL/api/v1/$RP_PROJECT/launch/$RP_LAUNCH_ID\" | jq -r '.metadata.qualityGate.status // empty')\ndone\n\n# Check quality gate status and take appropriate action\nif [[ \"$QUALITY_GATE_STATUS\" != \"PASSED\" ]]; then\n  printf \"Quality gate status: %s\\nFailing the pipeline.\\n\" \"$QUALITY_GATE_STATUS\"\n  exit 1\nelse\n  printf \"Quality gate status: %s\\nPipeline passed.\\n\" \"$QUALITY_GATE_STATUS\"\nfi\n"
        title: Quality gate
meta:
  bitrise.io:
    stack: linux-docker-android-20.04
    machine_type_id: standard
trigger_map:
- push_branch: main
  workflow: android
- pull_request_source_branch: '*'
  workflow: android
app:
  envs:
  - opts:
      is_expand: false
    RP_INSTANCE_URL: https://reportportal.epam.com
  - opts:
      is_expand: false
    RP_PROJECT: AHMED_AZHAZH_PERSONAL
  - opts:
      is_expand: false
    REQUEST_TIMEOUT_SECONDS: "60"
  - opts:
      is_expand: false
    SCRIPT_TIMEOUT_SECONDS: "60"
